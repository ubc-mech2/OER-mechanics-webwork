## DESCRIPTION
## 21-S-6.3-MK-02
## Structural Analysis
## ENDDESCRIPTION

## KEYWORDS('statics')
## DBsubject(Statics)
## DBchapter(Structural Analysis)
## DBsection(Zero-Force Membwes)
## Date(2021-02-11)
## Author(Matthew Koebel)
## Institution(University of British Columbia)
## Level(Intermediate)
## RESOURCES('21-S-6.3-MK-02.png')

########################################################

DOCUMENT();

loadMacros(
"PGstandard.pl", # Standard macros for PG language
"MathObjects.pl",
"PGML.pl",
"parserPopUp.pl",
"parserMultiAnswer.pl",
"parserRadioButtons.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
#"source.pl", # allows code to be displayed on certain sites.
#"PGcourse.pl", # Customization file for the course
 );

#######################################################

#Setup

TEXT(beginproblem());

Context("Matrix");		# or Complex

#---------------Tolerance------------------#
Context()->flags->set(
tolerance=>.02,
tolType=>'relative');  #relative or absolute

#-------------- Image Scale---------------#
$imgScale =0.35;


#-------------- Image Aspect Ratio---------------#
$width = $imgScale*1500;
$height = $imgScale*1200;


#---- Provided --------#
# random(lower, upper, stepsize)

$p1 = random(1,10,1);
$p2 = random(1,10,1);
$d1 = random(3,6,1);
$d2 = random(6,10,1);
$Lae = sqrt($d2**2 + ($d1*1.5)**2);
$Lbe = sqrt($d2**2 + ($d1*0.5)**2);

#-----Calculations------#

#---Moment around A----
$Dy = ($d1*$p1 + $p2*(2*$d1)) / (3*$d1);

#---Sum of forces---
$Ay = $p1 + $p2 - $Dy;

#---Joint A---
$Fae = $Ay * $Lae / $d2;
$Fab = $Fae * $d1 * 1.5 / $Lae;

#---Joint D---
$Fde = $Dy * $Lae / $d2;
$Fdc = $Fde * $d1 * 1.5 / $Lae;

#---Joint B---
$Fbe = $p1 * $Lbe / $d2;
$Fbc = $Fab - $Fbe * $d1 * 0.5 / $Lbe;

#---Joint C ---
$Fce = $p2 * $Lbe / $d2; 


$mae = RadioButtons([ "Tension", "Compression" ], "Compression");
$mab = RadioButtons([ "Tension", "Compression" ], "Tension");
$mde = RadioButtons([ "Tension", "Compression" ], "Compression");
$mcd = RadioButtons([ "Tension", "Compression" ], "Tension");
$mbe = RadioButtons([ "Tension", "Compression" ], "Tension");
$mbc = RadioButtons([ "Tension", "Compression" ], "Tension");
$mce = RadioButtons([ "Tension", "Compression" ], "Tension");

######################################################
#PGML

BEGIN_PGML

[@ image( "21-S-6.3-MK-02.png", width=>[$width], height=>[$height]) @]*

Determine the force in each member of the truss and state if the members are in tension or compression when the forces [`P_{1}`] = [`[$p1]`] [`\textrm{kN}`] and [`P_{2}`] = [`[$p2]`] [`\textrm{kN}`] while the dimensions [`d_{1}`] = [`[$d1]`] [`\textrm{m}`] and [`d_{2}`] = [`[$d2]`] [`\textrm{m}`] 


[`F_{AE}`] = [_____]{$Fae} [`\textrm{kN}`]

[@ $mae->buttons() @]*  

END_PGML
ANS( $mae->cmp() );


BEGIN_PGML

[`F_{AB}`] = [_____]{$Fab} [`\textrm{kN}`]

[@ $mab->buttons() @]*  

END_PGML
ANS( $mab->cmp() );

BEGIN_PGML

[`F_{DE}`] = [_____]{$Fde} [`\textrm{kN}`]


[@ $mde->buttons() @]*  

END_PGML
ANS( $mde->cmp() );


BEGIN_PGML

[`F_{DC}`] = [_____]{$Fdc} [`\textrm{kN}`] 

[@ $mcd->buttons() @]*  

END_PGML
ANS( $mcd->cmp() );


BEGIN_PGML

[`F_{BE}`] = [_____]{$Fbe} [`\textrm{kN}`]

[@ $mbe->buttons() @]*  

END_PGML
ANS( $mbe->cmp() );

BEGIN_PGML

[`F_{BC}`] = [_____]{$Fbc} [`\textrm{kN}`]


[@ $mbc->buttons() @]*  

END_PGML
ANS( $mbc->cmp() );

BEGIN_PGML

[`F_{CE}`] = [_____]{$Fce} [`\textrm{kN}`]


[@ $mce->buttons() @]*  

END_PGML
ANS( $mce->cmp() );

 BEGIN_PGML_SOLUTION
[@ image( "21-S-6.3-MK-02.pdf", width=>[0], height=>[0]) @]*
 END_PGML_SOLUTION


######################################################

ENDDOCUMENT();